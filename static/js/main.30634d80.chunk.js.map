{"version":3,"sources":["fBase.js","utilities/RadioComponent.js","utilities/useForm.js","utilities/validate.js","components/CategoryFactory.js","utilities/DeleteButton.js","utilities/Modal.js","components/Category.js","components/CategoriesSection.js","routes/Settings.js","components/TransactionFactory.js","utilities/printComma.js","components/Transaction.js","components/History.js","components/Balance.js","routes/Home.js","routes/Nav.js","routes/Router.js","components/Footer.js","App.js","index.js"],"names":["TRANSACTIONS","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","CATEGORIES","dbService","firestore","RadioComponent","values","changeHandler","slideRef","useRef","slideMoveHandler","slideDiv","current","classList","contains","remove","add","className","ref","htmlFor","onClick","type","name","id","value","onChange","useForm","initialValues","onSubmit","validate","useState","setValues","errors","setErrors","isSubmit","setIsSubmit","categories","setCategories","getCategories","a","collection","onSnapshot","snapshot","categoryArray","docs","map","doc","data","length","addTransactionFB","obj","set","addCategoryFB","useEffect","event","target","submitHandler","preventDefault","formType","transactionObj","date","Date","now","text","amount","category","categoryObj","test","CategoryFactory","required","placeholder","DeleteButton","itemId","onDeleteClick","window","confirm","delete","Modal","header","contents","onToggleHandler","Category","newCategoryText","setNewCategoryText","openModal","setOpenModal","prev","UpdateHandler","e","update","icon","faPencilAlt","faArrowCircleRight","CategoriesSection","Settings","TransactionFactory","filter","disabled","numToString","num","toString","replace","Transaction","isNewDate","newText","setNewText","colorByType","History","copyTransactions","transactions","concat","sort","b","transaction","idx","Balance","total","returnedAmount","reduce","acc","cur","income","parseInt","expense","Home","setTransactions","refNewBtn","transactionArray","document","getElementById","toggle","container","innerText","Nav","styled","span","location","useLocation","title","pathname","to","AppRouter","exact","path","Footer","getFullYear","App","ReactDOM","render","StrictMode"],"mappings":"wNAeeA,G,YAFEC,IAASC,cATH,CACnBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAKmB,gBACfC,EAAa,aAEbC,EAAYT,IAASU,Y,eC+BrBC,MA/Cf,YAAiD,EAAxBC,OAAyB,IAAjBC,EAAgB,EAAhBA,cAEvBC,EAAWC,mBAEXC,EAAmB,WACvB,IAAMC,EAAWH,EAASI,QACtBD,EAASE,UAAUC,SAAS,YAI9BH,EAASE,UAAUE,OAAO,WAC1BJ,EAASE,UAAUG,IAAI,YAJvBL,EAASE,UAAUE,OAAO,UAC1BJ,EAASE,UAAUG,IAAI,aAW3B,OACE,mCACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,UAAUC,IAAKV,IAC9B,uBAAOW,QAAQ,WAAWF,UAAU,cAAcG,QAASV,EAA3D,eACA,uBACEW,KAAK,QACLC,KAAK,OACLC,GAAG,WACHN,UAAU,kBACVO,MAAM,eACNC,SAAUlB,IAEZ,uBAAOY,QAAQ,YAAYF,UAAU,cAAcG,QAASV,EAA5D,eACA,uBACEW,KAAK,QACLC,KAAK,OACLC,GAAG,YACHN,UAAU,kBACVO,MAAM,eACNC,SAAUlB,U,gCCgDPmB,MAtFf,YAAwD,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SAAW,EACvBC,mBAASH,GADc,mBAC5CrB,EAD4C,KACpCyB,EADoC,OAEvBD,mBAAS,IAFc,mBAE5CE,EAF4C,KAEpCC,EAFoC,OAGnBH,oBAAS,GAHU,mBAG5CI,EAH4C,KAGlCC,EAHkC,OAIfL,mBAAS,IAJM,mBAI5CM,EAJ4C,KAIhCC,EAJgC,KAM7CC,EAAa,uCAAG,sBAAAC,EAAA,sEACZpC,EAAUqC,WAAWtC,GAAYuC,YAAW,SAACC,GACjD,IAAMC,EAAgBD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACtCvB,GAAIuB,EAAIvB,IACLuB,EAAIC,WAETV,EAAcM,MANE,2CAAH,qDAUM,IAAtBP,EAAWY,QACVV,IAGJ,IAAMW,EAAgB,uCAAG,WAAMC,GAAN,SAAAX,EAAA,sEACfpC,EAAUqC,WAAW/C,GAAcqD,IAAnC,UAA0CI,EAAI3B,KAAM4B,IAAID,GADzC,2CAAH,sDAIhBE,EAAa,uCAAG,WAAMF,GAAN,SAAAX,EAAA,sEACZpC,EAAUqC,WAAWtC,GAAYc,IAAIkC,GADzB,2CAAH,sDAkDnB,OAPAG,qBAAU,WACHnB,GACCN,EAAStB,GAEb6B,GAAY,KACb,CAACD,EAAU5B,EAAQsB,IAEf,CACHtB,SACA0B,SACAE,WACA3B,cAlDkB,SAAC+C,GAAW,IAAD,EACPA,EAAMC,OAArBjC,EADsB,EACtBA,KAAME,EADgB,EAChBA,MACbO,EAAU,2BAAKzB,GAAN,kBAAegB,EAAOE,KAC/BW,GAAY,IAgDZqB,cA1CkB,SAACF,GAKnB,GAJAA,EAAMG,iBACNtB,GAAY,GACZF,EAAUJ,EAASvB,IAEhBA,EAAOoD,WAAajE,EAAa,CAChC,IAAMkE,EAAiB,CACvBtC,KAAMf,EAAOe,KACbuC,KAAMtD,EAAOsD,KACbrC,GAAIsC,KAAKC,MACTC,KAAMzD,EAAOyD,KACbC,QAAS1D,EAAO0D,OAChBC,SAAU3D,EAAO2D,UAGjBhB,EAAiBU,QAGhB,GAAGrD,EAAOoD,WAAaxD,EAAW,CAEnC,IAAMgE,EAAc,CAChB7C,KAAMf,EAAOe,KACb4C,SAAU3D,EAAO2D,UAErBb,EAAcc,GAGpBnC,EAAUJ,IAgBRS,aACAE,kBCpFO,SAAST,EAAT,GAA8C,EAA1BR,KAA2B,IAArBuC,EAAoB,EAApBA,KAAYI,GAAQ,EAAdD,KAAc,EAARC,QAC3ChC,EAAS,GAcf,OATIA,EAAO4B,KAHPA,EAGc,KAFA,2DAKd,SAASO,KAAKH,GAGdhC,EAAOgC,OAAS,KAFhBhC,EAAOgC,OAAS,oFAKbhC,ECYIoC,MArBf,WAA4B,IAAD,EACyB1C,EAAQ,CACpDC,cAAe,CAAC+B,SAAUxD,EAAYmB,KAAM,eAAM4C,SAAU,IAC5DrC,SAAU,SAACtB,KACXuB,aAHIvB,EADe,EACfA,OAAQC,EADO,EACPA,cAAeiD,EADR,EACQA,cAK/B,OAEI,uBAAM5B,SAAU4B,EAAevC,UAAU,eAAzC,UACI,8CACA,cAAC,EAAD,CAAgBX,OAAQA,EAAQC,cAAeA,IAC/C,8BACA,uBAAOY,QAAQ,WAAf,sBACA,uBAAOE,KAAK,OAAOJ,UAAU,QAAQK,KAAK,WAAW+C,UAAQ,EAAC7C,MAAOlB,EAAO2D,SAAUxC,SAAUlB,EAAe+D,YAAY,sBAE7H,uBAAOjD,KAAK,SAASJ,UAAU,SAASK,KAAK,SAASE,MAAM,aCEvD+C,MApBf,YAA6C,IAArBb,EAAoB,EAApBA,SAAUc,EAAU,EAAVA,OACxBC,EAAa,uCAAG,sBAAAlC,EAAA,0DACNmC,OAAOC,QAAQ,wEADT,oBAKXjB,IAAajE,EALF,gCAMJU,EAAU2C,IAAV,UAAiBrD,EAAjB,YAAiC+E,IAAUI,SANvC,iCAQNlB,IAAaxD,EARP,kCASJC,EAAU2C,IAAV,UAAiB5C,EAAjB,YAA+BsE,IAAUI,SATrC,4CAAH,qDAcnB,OACI,wBAAQ3D,UAAU,cAAcG,QAASqD,EAAzC,gB,gBCDOI,MAhBf,YAAqD,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,gBAChC,OACE,mCAEE,sBAAK/D,UAAU,QAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,6BAAK6D,IACL,wBAAQ1D,QAAS4D,EAAjB,kBAEF,qBAAK/D,UAAU,2BAAf,SAA2C8D,UC6DpCE,MAhEf,YAAiC,IAAbhB,EAAY,EAAZA,SAAY,EACkBnC,mBAASmC,EAASA,UADpC,mBACrBiB,EADqB,KACJC,EADI,OAEMrD,oBAAS,GAFf,mBAErBsD,EAFqB,KAEVC,EAFU,KAItBL,EAAkB,WACpBK,GAAa,SAAAC,GAAI,OAAKA,MAOpBC,EAAa,uCAAG,WAAMC,GAAN,SAAAjD,EAAA,6DAClBiD,EAAE/B,iBACF4B,GAAa,GAFK,SAGZlF,EAAU2C,IAAV,UAAiB5C,EAAjB,YAA+B+D,EAAS1C,KAAMkE,OAAO,CACvDxB,SAAUiB,IAJI,2CAAH,sDAQnB,OACE,qCACE,+BACE,6BACE,cAAC,EAAD,CAAcxB,SAAUxD,EAAYsE,OAAQP,EAAS1C,OAEvD,6BAAK0C,EAAS5C,OACd,6BAAK4C,EAASA,WACd,6BACE,wBAAQ7C,QAAS4D,EAAiB/D,UAAU,YAA5C,SACE,cAAC,IAAD,CAAiByE,KAAMC,aAK1BP,GACC,cAAC,EAAD,CACEN,OAAO,wCACPE,gBAAiBA,EACjBD,SACE,qCACE,wCACMd,EAAS5C,KADf,WAC0B,+BAAO4C,EAASA,cAE1C,uBAAMrC,SAAU2D,EAAhB,UACE,uBACElE,KAAK,OACLG,MAAO0D,EACPzD,SAxCI,SAAC+D,GACnBL,EAAmBK,EAAEjC,OAAO/B,QAwCdP,UAAU,UAEZ,wBAAQA,UAAU,mBAAlB,SACE,cAAC,IAAD,CAAiByE,KAAME,oBC3B9BC,MA7Bf,YAA4C,IAAfzD,EAAc,EAAdA,WAGzB,OACE,qCACE,cAAC,EAAD,IACA,sBAAKnB,UAAU,YAAf,UACA,+CACA,kCACE,gCACE,+BACE,8CACA,sCACA,0CACA,mDAGJ,gCACGmB,GACCA,EAAWS,KAAI,SAACoB,GACd,OAAO,cAAC,EAAD,CAA6BA,SAAUA,GAAxBA,EAAS1C,mBCThCuE,MAXf,YAAiC,IAAd1D,EAAa,EAAbA,WACf,OACI,mCACC,yBAASb,GAAG,iBAAZ,SACI,cAAC,EAAD,CAAmBa,WAAYA,SCuF7B2D,MAzFf,WAA+B,IAAD,EAQxBrE,EAAQ,CACVC,cAAe,CACb+B,SAAUjE,EACV4B,KAAM,eACNuC,KAAM,GACNG,KAAM,GACNC,OAAQ,EACRC,SAAU,IAEZrC,SAAU,SAACtB,KACXuB,aAhBAvB,EAF0B,EAE1BA,OACA0B,EAH0B,EAG1BA,OACAE,EAJ0B,EAI1BA,SACA3B,EAL0B,EAK1BA,cACAiD,EAN0B,EAM1BA,cACApB,EAP0B,EAO1BA,WAeF,OACE,mCACE,uBAAMR,SAAU4B,EAAhB,UACI,qDACA,cAAC,EAAD,CACIlD,OAAQA,EACRC,cAAeA,IAEnB,2BAAUU,UAAU,eAApB,UACE,yBAAQK,KAAK,WAAWG,SAAUlB,EAAlC,UACF,0GACC6B,GACCA,EAAW4D,QAAO,SAAAR,GAAC,OAAIA,EAAEnE,OAASf,EAAOe,QAAMwB,KAAI,SAAC2C,GAClD,OACE,wBAAmBhE,MAAOgE,EAAEvB,SAA5B,SACGuB,EAAEvB,UADQuB,EAAEjE,UAOrB,8BACE,uBAAOJ,QAAQ,OAAf,kBACCa,EAAO4B,MAAQ,+BAAO5B,EAAO4B,OAC9B,uBACEvC,KAAK,OACLC,KAAK,OACLE,MAAOlB,EAAOsD,KACdnC,SAAUlB,EACV8D,UAAQ,EACRpD,UAAU,aAGd,8BACE,uBAAOE,QAAQ,OAAf,kBACA,uBACEE,KAAK,OACLG,MAAOlB,EAAOyD,KACdtC,SAAUlB,EACVe,KAAK,OACLC,GAAG,OACH+C,YAAY,aACZD,UAAQ,EACRpD,UAAU,aAGd,8BACE,uBAAOE,QAAQ,SAAf,oBACCa,EAAOgC,QAAU,+BAAOhC,EAAOgC,SAChC,uBACE3C,KAAK,SACLE,GAAG,SACHD,KAAK,SACLE,MAAOlB,EAAO0D,OACdvC,SAAUlB,EACV8D,UAAQ,EACRpD,UAAU,gBAKhB,uBAAOI,KAAK,SAASG,MAAM,kBAAkByE,SAAU/D,UCzFhD,SAASgE,EAAYC,GAChC,OAAOA,EAAIC,WAAWC,QAAQ,wBAAyB,KCiG5CC,MAvFf,YAAqD,IAA9B3C,EAA6B,EAA7BA,eAAgB4C,EAAa,EAAbA,UAAa,EACpBzE,mBAAS6B,EAAeI,MADJ,mBAC3CyC,EAD2C,KAClCC,EADkC,OAEhB3E,oBAAS,GAFO,mBAE3CsD,EAF2C,KAEhCC,EAFgC,KAG5ChE,EAAOsC,EAAetC,KAGtB2D,EAAkB,WACtBK,GAAa,SAACC,GAAD,OAAWA,MAGpBC,EAAa,uCAAG,WAAOC,GAAP,SAAAjD,EAAA,6DACpBiD,EAAE/B,iBACF4B,GAAa,GAFO,SAIdlF,EAAU2C,IAAV,UAAiBrD,EAAjB,YAAiCkE,EAAepC,KAAMkE,OAAO,CACjE1B,KAAMyC,IALY,2CAAH,sDAafE,EAAc,GAYlB,MAVa,iBAATrF,EACFqF,EAAc,YACI,iBAATrF,IACTqF,EAAc,cAQd,qCACGH,EAAY,mBAAGtF,UAAU,OAAb,SAAqB0C,EAAeC,OAAY,GAC7D,sBACE3C,UAAS,UAAKyF,EAAL,yBACTtF,QATmB,aAOrB,UAIE,sBAAKH,UAAU,kBAAf,UACE,cAAC,EAAD,CAAcyC,SAAUjE,EAAc+E,OAAQb,EAAepC,KAE7D,wBAAQH,QAAS4D,EAAiB/D,UAAU,cAA5C,SACE,cAAC,IAAD,CAAiByE,KAAMC,WAI3B,sBAAK1E,UAAU,sBAAf,UACE,uBAAMA,UAAU,OAAhB,UACG0C,EAAeI,KAChB,sBAAM9C,UAAU,WAAhB,SAA4B0C,EAAeM,cAE7C,uBAAMhD,UAAU,SAAhB,UAA0BiF,EAAYvC,EAAeK,QAArD,kBAGHoB,GACK,cAAC,EAAD,CACEN,OAAO,yCACPE,gBAAiBA,EACjBD,SACE,qCACE,wCAAOpB,EAAeC,KAAtB,cAAgCD,EAAetC,KAA/C,OACA,+BAAOsC,EAAeI,OADtB,aAEOJ,EAAeK,WACtB,uBAAMpC,SAAU2D,EAAhB,UAEE,uBACElE,KAAK,OACLG,MAAOgF,EACP/E,SArDE,SAAC+D,GACrBiB,EAAWjB,EAAEjC,OAAO/B,QAqDFP,UAAU,UAEZ,wBAAQA,UAAU,mBAAlB,SACE,cAAC,IAAD,CAAiByE,KAAME,oBC3C9Be,MAzCf,YAAoC,IAE1BC,EAFyB,EAAhBC,aAEuBC,SAOtC,OALAF,EAAiBG,MAAK,SAACxE,EAAGyE,GACxB,OAAOzE,EAAEqB,KAAOoD,EAAEpD,MAAQ,EAAI,KAK9B,yBAASrC,GAAG,mBAAZ,SACE,oCACA,yCAEGqF,GACCA,EAAiB/D,KAAI,SAACoE,EAAaC,GACjC,IAAIX,GAAY,EAWhB,OAVY,IAARW,EAEFX,GAAY,EACHW,EAAM,GAAKA,EAAMN,EAAiB5D,OAAS,IAElDuD,EADEU,EAAYrD,OAASgD,EAAiBM,EAAM,GAAGtD,MAOnD,cAAC,EAAD,CAEED,eAAgBsD,EAChBV,UAAWA,GAFNU,EAAY1F,aCoBpB4F,MAjDf,YAAoC,IAC5BP,EAD2B,EAAhBC,aACqBC,SAE9BM,EAAQlB,EAAYU,EACP/D,KAAI,SAAC2C,GACF,IAAI6B,EAAiB,EAGrB,MAFc,iBAAX7B,EAAEnE,KAAiBgG,GAAkB7B,EAAExB,OACvB,iBAAXwB,EAAEnE,OAAiBgG,GAAkB7B,EAAExB,QACxCqD,KAEVC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAOC,IAAM,IAGlDC,EAASvB,EAAYU,EACxBZ,QAAO,SAACR,GAAD,MAAkB,iBAAXA,EAAEnE,QAChBwB,KAAI,SAAC2C,GAAD,OAAOkC,SAASlC,EAAExB,WACtBsD,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAOC,IAAM,IAEhCG,EAAUzB,EAAYU,EACzBZ,QAAO,SAACR,GAAD,MAAkB,iBAAXA,EAAEnE,QAChBwB,KAAI,SAAC2C,GAAD,OAAOkC,SAASlC,EAAExB,WACtBsD,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAOC,IAAM,IAItC,OACE,0BAASvG,UAAU,mBAAnB,UACE,0BAASA,UAAU,iBAAnB,UACE,mBAAGA,UAAU,WAAb,0BACA,oBAAGM,GAAG,QAAN,UAAe6F,EAAf,eAEF,gCACE,0BAASnG,UAAU,yBAAnB,UACE,mBAAGA,UAAU,WAAb,oBACA,oBAAGA,UAAU,aAAb,cACIwG,EADJ,eAIF,0BAASxG,UAAU,yBAAnB,UACE,mBAAGA,UAAU,WAAb,qBACA,oBAAGA,UAAU,cAAb,cACI0G,EADJ,sBCOKC,MA3Cf,WAAiB,IAAD,EAC4B9F,mBAAS,IADrC,mBACL+E,EADK,KACSgB,EADT,KAENC,EAAYrH,mBAyBlB,OAXA4C,qBAAU,WACRlD,EAAUqC,WAAW/C,GAAcgD,YAAW,SAACC,GAC7C,IAAMqF,EAAmBrF,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACzCvB,GAAIuB,EAAIvB,IACLuB,EAAIC,WAET8E,EAAgBE,QAEjB,IAID,qCACE,cAAC,EAAD,CAASlB,aAAcA,IACvB,cAAC,EAAD,CAASA,aAAcA,IACvB,yBAAS5F,UAAU,eAAnB,SACE,wBAAQA,UAAU,SAASG,QA5BX,WACO4G,SAASC,eAAe,oBAChCpH,UAAUqH,OAAO,SAClC,IAAMC,EAAYH,SAASC,eAAe,2BAC1CE,EAAUtH,UAAUqH,OAAO,QAE3BJ,EAAUlH,QAAQwH,UACfD,EAAUtH,UAAUC,SAAS,QAC9B,SACA,uBAmBmDI,IAAK4G,EAAxD,mCAIF,yBAASvG,GAAG,0BAAZ,SACE,cAAC,EAAD,U,wSCTK8G,MA/Bf,WACgBC,IAAOC,KAAV,KAAX,IAQMC,EAAWC,cACbC,EAAQ,GAQZ,MAN4B,MAAtBF,EAASG,SACXD,EAAQ,OACuB,cAAtBF,EAASG,WAClBD,EAAQ,YAIV,gCACE,cAAC,IAAD,CAAME,GAAG,YAAT,oBAGA,sBAAMrH,GAAG,WAAT,SAAqBmH,IACrB,cAAC,IAAD,CAAME,GAAG,IAAT,wBCNSC,MAhBf,YAAoC,IAAfzG,EAAc,EAAdA,WACnB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,CAAU3G,WAAYA,MAExB,cAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM3G,WAAYA,aCLb4G,MARf,WACI,OACE,4CACU,IAAInF,MAAOoF,cADrB,uDCwBSC,MAvBf,WAAgB,IAAD,EACuBpH,mBAAS,IADhC,mBACNM,EADM,KACMC,EADN,KAeb,OAZAgB,qBAAU,WACRlD,EAAUqC,WAAWtC,GAAYuC,YAAW,SAACC,GAE3C,IAAMC,EAAgBD,EAASE,KAAKC,KAAI,SAACC,GAAD,mBAAC,eACpCA,EAAIC,QAD+B,IAEtCxB,GAAIuB,EAAIvB,QAEVc,EAAcM,QAEf,IAID,uBAAM1B,UAAU,MAAhB,UACA,cAAC,EAAD,CAAWmB,WAAYA,IACvB,cAAC,EAAD,Q,MClBJ+G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,W","file":"static/js/main.30634d80.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"; \r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDR8tvZ_nXU_Yvf3m9fDSstpav1n0HCJGc\",\r\n    authDomain: \"expense-tracker-91c95.firebaseapp.com\",\r\n    projectId: \"expense-tracker-91c95\",\r\n    storageBucket: \"expense-tracker-91c95.appspot.com\",\r\n    messagingSenderId: \"982156523497\",\r\n    appId: \"1:982156523497:web:1f3a7dca886f9d5a4b3d78\"\r\n  };\r\n\r\n  export default firebase.initializeApp(firebaseConfig);\r\n\r\n  export const TRANSACTIONS = \"transactions\";\r\n  export const CATEGORIES = \"categories\";\r\n\r\n  export const dbService = firebase.firestore();","import React, {useRef} from 'react'\r\n\r\nfunction RadioComponent({values, changeHandler}) {\r\n\r\n    const slideRef = useRef();\r\n\r\n    const slideMoveHandler = () => {\r\n      const slideDiv = slideRef.current;\r\n      if(!slideDiv.classList.contains('toRight')){\r\n        slideDiv.classList.remove('toLeft');\r\n        slideDiv.classList.add('toRight');\r\n      } else {\r\n        slideDiv.classList.remove('toRight');\r\n        slideDiv.classList.add('toLeft');\r\n      }\r\n\r\n      \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n      <>  \r\n        <div className=\"radios\" >\r\n          <div className=\"checked\" ref={slideRef}></div>\r\n          <label htmlFor=\"typePlus\" className=\"radioLabels\" onClick={slideMoveHandler}>+</label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            id=\"typePlus\"\r\n            className=\"transactionType\"\r\n            value=\"수입\"\r\n            onChange={changeHandler}\r\n          />\r\n          <label htmlFor=\"typeMinus\" className=\"radioLabels\" onClick={slideMoveHandler}>-</label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            id=\"typeMinus\"\r\n            className=\"transactionType\"\r\n            value=\"지출\"\r\n            onChange={changeHandler}\r\n          />\r\n          \r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default RadioComponent\r\n","import {useState, useEffect} from 'react';\r\nimport {CATEGORIES, dbService, TRANSACTIONS} from 'fBase';\r\n\r\nfunction useForm({ initialValues, onSubmit, validate}) {\r\n    const [values, setValues] = useState(initialValues);\r\n    const [errors, setErrors] = useState(\"\");\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const getCategories = async() => {\r\n        await dbService.collection(CATEGORIES).onSnapshot((snapshot) => {\r\n          const categoryArray = snapshot.docs.map((doc) =>({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }))\r\n          setCategories(categoryArray);\r\n        });\r\n      };\r\n\r\n    if(categories.length === 0 ){ //첫 렌더링 때, 모든 카테고리 목록을 가져오기 위한 조건문\r\n        getCategories();\r\n    }\r\n    \r\n    const addTransactionFB = async(obj) => {\r\n        await dbService.collection(TRANSACTIONS).doc(`${obj.id}`).set(obj);\r\n    };\r\n\r\n    const addCategoryFB = async(obj) => {\r\n        await dbService.collection(CATEGORIES).add(obj);\r\n    }\r\n\r\n    const changeHandler = (event) => {\r\n        const {name, value} = event.target;\r\n        setValues({ ...values, [name]: value});\r\n        setIsSubmit(false);\r\n        // setErrors(validate(values));\r\n    };\r\n\r\n    //get categories from db by category type\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        setIsSubmit(true);\r\n        setErrors(validate(values));\r\n        \r\n        if(values.formType === TRANSACTIONS){\r\n            const transactionObj = {\r\n            type: values.type,\r\n            date: values.date,\r\n            id: Date.now(),\r\n            text: values.text,\r\n            amount: +values.amount, //type이 number로 db에 저장\r\n            category: values.category\r\n            };\r\n\r\n            addTransactionFB(transactionObj);\r\n        } \r\n        \r\n        else if(values.formType === CATEGORIES){\r\n\r\n            const categoryObj = {\r\n                type: values.type,\r\n                category: values.category\r\n            }\r\n            addCategoryFB(categoryObj);\r\n        }\r\n\r\n      setValues(initialValues);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(isSubmit) {\r\n            onSubmit(values);\r\n        } \r\n        setIsSubmit(false);\r\n    }, [isSubmit, values, onSubmit]);\r\n\r\n    return {\r\n        values,\r\n        errors,\r\n        isSubmit,\r\n        changeHandler,\r\n        submitHandler,\r\n        categories,\r\n        getCategories\r\n    \r\n    }\r\n}\r\n\r\nexport default useForm;","export default function validate({ type, date, text, amount}){\r\n    const errors = {};\r\n\r\n    if(!date){\r\n        errors.date = \"날짜를 입력해주세요.\";\r\n    } else {\r\n        errors.date = null;\r\n    }\r\n    \r\n    if(!/^[0-9]/.test(amount)){\r\n        errors.amount = \"금액에는 숫자만 입력해주세요.\";\r\n    } else{\r\n        errors.amount = null;\r\n    }\r\n\r\n    return errors;\r\n}","import React from 'react'\r\nimport RadioComponent from 'utilities/RadioComponent';\r\nimport useForm from 'utilities/useForm';\r\nimport validate from 'utilities/validate';\r\nimport {CATEGORIES} from 'fBase';\r\n\r\nfunction CategoryFactory() {\r\n    const { values, changeHandler, submitHandler} = useForm({\r\n        initialValues: {formType: CATEGORIES, type: \"지출\", category: \"\"},\r\n        onSubmit: (values) => {},\r\n        validate\r\n        });\r\n    return (\r\n     \r\n        <form onSubmit={submitHandler} className=\"categoryForm\">\r\n            <h3>New Category</h3>\r\n            <RadioComponent values={values} changeHandler={changeHandler} />\r\n            <p>\r\n            <label htmlFor=\"category\">Contents</label>\r\n            <input type=\"text\" className=\"input\" name=\"category\" required value={values.category} onChange={changeHandler} placeholder=\"Enter contents...\"/>\r\n          \r\n          <input type=\"submit\" className=\"button\" name=\"submit\" value=\"+\"/></p>\r\n        </form>\r\n     \r\n    );\r\n}\r\n\r\nexport default CategoryFactory\r\n","import { TRANSACTIONS, dbService, CATEGORIES } from 'fBase';\r\nimport React from 'react';\r\n\r\nfunction DeleteButton({ formType, itemId }) {\r\n    const onDeleteClick = async() => {\r\n        const yes = window.confirm(\"내역을 삭제하시겠습니까?\");\r\n\r\n        if(yes){\r\n\r\n            if(formType === TRANSACTIONS){\r\n                await dbService.doc(`${TRANSACTIONS}/${itemId}`).delete();\r\n            }\r\n            else if(formType === CATEGORIES){\r\n                await dbService.doc(`${CATEGORIES}/${itemId}`).delete();\r\n            }\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <button className=\"eventButton\" onClick={onDeleteClick}>X</button>\r\n    )\r\n}\r\n\r\nexport default DeleteButton\r\n","import React from 'react'\r\n\r\nfunction Modal({header, contents, onToggleHandler}) {\r\n  return (\r\n    <>\r\n      {/* <div id=\"coverBackground\"></div> */}\r\n      <div className=\"modal\">\r\n        <div className=\"modalContents\">\r\n          <h4>{header}</h4>\r\n          <button onClick={onToggleHandler}>X</button>\r\n        </div>\r\n        <div className=\"modalContents flexColumn\">{contents}</div>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal\r\n\r\n","import React, {useState} from 'react';\r\nimport { CATEGORIES, dbService } from 'fBase';\r\nimport DeleteButton from 'utilities/DeleteButton';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faArrowCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from 'utilities/Modal';\r\n// import UpdateHandler from 'components/UpdateHandler';\r\n\r\nfunction Category({ category }) {\r\n    const [newCategoryText, setNewCategoryText] = useState(category.category);\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const onToggleHandler = () => {\r\n        setOpenModal(prev => !prev);\r\n    };\r\n\r\n    const onTextHandler = (e) => {\r\n        setNewCategoryText(e.target.value);\r\n    }\r\n\r\n    const UpdateHandler = async(e) => {\r\n        e.preventDefault();\r\n        setOpenModal(false);\r\n        await dbService.doc(`${CATEGORIES}/${category.id}`).update({\r\n            category: newCategoryText,\r\n        });\r\n        \r\n    }\r\n    return (\r\n      <>\r\n        <tr>\r\n          <td>\r\n            <DeleteButton formType={CATEGORIES} itemId={category.id} />\r\n          </td>\r\n          <td>{category.type}</td>\r\n          <td>{category.category}</td>\r\n          <td>\r\n            <button onClick={onToggleHandler} className=\"deleteBtn\">\r\n              <FontAwesomeIcon icon={faPencilAlt} />\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      \r\n          {openModal && (\r\n            <Modal\r\n              header=\"카테고리 수정\"\r\n              onToggleHandler={onToggleHandler}\r\n              contents={\r\n                <>\r\n                  <p>\r\n                    {`${category.type} - `} <span>{category.category}</span>\r\n                  </p>\r\n                  <form onSubmit={UpdateHandler}>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newCategoryText}\r\n                      onChange={onTextHandler}\r\n                      className=\"input\"\r\n                    />\r\n                    <button className=\"submitButtonIcon\">\r\n                      <FontAwesomeIcon icon={faArrowCircleRight} />\r\n                    </button>\r\n                  </form>\r\n                </>\r\n              }\r\n            />\r\n          )}\r\n        \r\n      </>\r\n    );\r\n}\r\n\r\nexport default Category\r\n","import React from 'react';\r\nimport CategoryFactory from \"components/CategoryFactory\";\r\nimport Category from 'components/Category';\r\n\r\nfunction CategoriesSection({ categories }) {\r\n\r\n  \r\n    return (\r\n      <>\r\n        <CategoryFactory />\r\n        <div className=\"listTable\">\r\n        <h3>Category List</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>삭제</th>\r\n              <th>TYPE</th>\r\n              <th>CONTENTS</th>\r\n              <th>수정</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {categories &&\r\n              categories.map((category) => {\r\n                return <Category key={category.id}  category={category}/>;\r\n              })}\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default CategoriesSection\r\n","import CategoriesSection from 'components/CategoriesSection'\r\nimport SelectBgcolor from 'components/SelectBgcolor';\r\nimport React from 'react'\r\n\r\nfunction Settings({categories}) {\r\n    return (\r\n        <>\r\n         <article id=\"settingSection\">\r\n             <CategoriesSection categories={categories}/>\r\n             {/* <SelectBgcolor /> */}\r\n        </article>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react';\r\nimport useForm from 'utilities/useForm';\r\nimport validate from 'utilities/validate';\r\nimport RadioComponent from '../utilities/RadioComponent';\r\nimport {TRANSACTIONS} from \"fBase\";\r\n\r\nfunction TransactionFactory() {\r\n  const {\r\n    values,\r\n    errors,\r\n    isSubmit,\r\n    changeHandler,\r\n    submitHandler,\r\n    categories,\r\n  } = useForm({\r\n    initialValues: {\r\n      formType: TRANSACTIONS,\r\n      type: \"지출\",\r\n      date: \"\",\r\n      text: \"\",\r\n      amount: 0,\r\n      category: \"\",\r\n    },\r\n    onSubmit: (values) => {},\r\n    validate,\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={submitHandler}>\r\n          <h3>Add New Transaction</h3>\r\n          <RadioComponent\r\n              values={values}\r\n              changeHandler={changeHandler}\r\n            />\r\n          <fieldset className=\"formFieldset\">\r\n            <select name=\"category\" onChange={changeHandler}>\r\n          <option>카테고리를 선택해주세요.</option>\r\n          {categories &&\r\n            categories.filter(e => e.type === values.type).map((e) => {\r\n              return (\r\n                <option key={e.id} value={e.category}>\r\n                  {e.category}\r\n                </option>\r\n              );\r\n            })}\r\n        </select>\r\n\r\n          <p>\r\n            <label htmlFor=\"date\">Date</label>\r\n            {errors.date && <span>{errors.date}</span>}\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              value={values.date}\r\n              onChange={changeHandler}\r\n              required\r\n              className=\"input\"\r\n            />\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"text\">Text</label>\r\n            <input\r\n              type=\"text\"\r\n              value={values.text}\r\n              onChange={changeHandler}\r\n              name=\"text\"\r\n              id=\"text\"\r\n              placeholder=\"Enter text\"\r\n              required\r\n              className=\"input\"\r\n            />\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"amount\">Amount</label>\r\n            {errors.amount && <span>{errors.amount}</span>}\r\n            <input\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              value={values.amount}\r\n              onChange={changeHandler}\r\n              required\r\n              className=\"input\"\r\n            />\r\n          </p>\r\n        </fieldset>\r\n\r\n        <input type=\"submit\" value=\"Add transaction\" disabled={isSubmit} />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TransactionFactory\r\n","export default function numToString(num){\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };","import React, { useState } from \"react\";\r\nimport DeleteButton from \"utilities/DeleteButton\";\r\nimport Modal from \"utilities/Modal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPencilAlt,\r\n  faArrowCircleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { TRANSACTIONS, dbService } from \"fBase\";\r\nimport numToString from \"utilities/printComma\";\r\n\r\nfunction Transaction({ transactionObj, isNewDate }) {\r\n  const [newText, setNewText] = useState(transactionObj.text);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const type = transactionObj.type;\r\n  // const refBtns = useRef();\r\n\r\n  const onToggleHandler = () => {\r\n    setOpenModal((prev) => !prev);\r\n  };\r\n\r\n  const UpdateHandler = async (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(false);\r\n\r\n    await dbService.doc(`${TRANSACTIONS}/${transactionObj.id}`).update({\r\n      text: newText,\r\n    });\r\n  };\r\n\r\n  const onTextHandler = (e) => {\r\n    setNewText(e.target.value);\r\n  };\r\n\r\n  let colorByType = \"\";\r\n\r\n  if (type === \"수입\") {\r\n    colorByType = \"moneyPlus\";\r\n  } else if (type === \"지출\") {\r\n    colorByType = \"moneyMinus\";\r\n  }\r\n\r\n  const showBtnContainer = () => {\r\n    // refBtns.current.classList.toggle(\"clickedBtnContainer\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isNewDate ? <p className=\"date\">{transactionObj.date}</p> : \"\"}\r\n      <div\r\n        className={`${colorByType} transactionContainer`}\r\n        onClick={showBtnContainer}\r\n      >\r\n        <div className=\"buttonContainer\">\r\n          <DeleteButton formType={TRANSACTIONS} itemId={transactionObj.id} />\r\n         \r\n          <button onClick={onToggleHandler} className=\"eventButton\">\r\n            <FontAwesomeIcon icon={faPencilAlt} />\r\n          </button>\r\n          </div>\r\n     \r\n        <div className=\"transactionContents\">\r\n          <span className=\"text\">\r\n            {transactionObj.text}\r\n            <span className=\"category\">{transactionObj.category}</span>\r\n          </span>\r\n          <span className=\"amount\">{numToString(transactionObj.amount)}원</span>\r\n        </div>\r\n      </div>\r\n      {openModal && (\r\n            <Modal\r\n              header=\"거래 내역 수정\"\r\n              onToggleHandler={onToggleHandler}\r\n              contents={\r\n                <>\r\n                  <p>{`${transactionObj.date} / ${transactionObj.type} / `} \r\n                  <span>{transactionObj.text}</span>\r\n                  {` / ${transactionObj.amount}`}</p>\r\n                  <form onSubmit={UpdateHandler}>\r\n \r\n                    <input\r\n                      type=\"text\"\r\n                      value={newText}\r\n                      onChange={onTextHandler}\r\n                      className=\"input\"\r\n                    />\r\n                    <button className=\"submitButtonIcon\">\r\n                      <FontAwesomeIcon icon={faArrowCircleRight} />\r\n                    </button>\r\n                  </form>\r\n                </>\r\n              }\r\n            />\r\n          )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n","import React from 'react';\r\nimport Transaction from \"components/Transaction\";\r\n\r\nfunction History({ transactions }) {\r\n\r\n    const copyTransactions = transactions.concat();\r\n\r\n    copyTransactions.sort((a, b) => { //sorting by date (desc)\r\n      return a.date > b.date ? -1 : 1;\r\n    });\r\n\r\n\r\n    return (\r\n      <article id=\"historyComponent\">\r\n        <section>\r\n        <h3>History</h3>\r\n        \r\n          {copyTransactions &&\r\n            copyTransactions.map((transaction, idx) => {\r\n              let isNewDate = true;\r\n              if (idx === 0) {\r\n                //맨 최근 거래내역 날짜 추가 위한 조건문\r\n                isNewDate = true;\r\n              } else if (idx > 0 && idx < copyTransactions.length - 1) {\r\n                if (transaction.date !== copyTransactions[idx - 1].date) {\r\n                  isNewDate = true;\r\n                } else {\r\n                  isNewDate = false;\r\n                }\r\n              }\r\n              return (\r\n                <Transaction\r\n                  key={transaction.id}\r\n                  transactionObj={transaction}\r\n                  isNewDate={isNewDate}\r\n                />\r\n              );\r\n            })}\r\n        </section>\r\n        \r\n      </article>\r\n    );\r\n}\r\n\r\nexport default History\r\n","import React from \"react\";\r\nimport numToString from 'utilities/printComma';\r\n\r\nfunction Balance({ transactions }) {\r\n  const copyTransactions = transactions.concat();\r\n\r\n    const total = numToString(copyTransactions\r\n                      .map((e) => {\r\n                          let returnedAmount = 0;\r\n                          if(e.type === '수입') { returnedAmount = +e.amount}\r\n                          else if(e.type === '지출') { returnedAmount = -e.amount}\r\n                          return returnedAmount\r\n                      }) // return amount with +/- set by type\r\n                      .reduce((acc, cur) => (acc += cur), 0)); //get total\r\n  \r\n\r\n  const income = numToString(copyTransactions\r\n    .filter((e) => e.type === \"수입\") //filter by type\r\n    .map((e) => parseInt(e.amount)) // return only amount which is changed string to int\r\n    .reduce((acc, cur) => (acc += cur), 0)); //get total\r\n\r\n  const expense = numToString(copyTransactions\r\n    .filter((e) => e.type === \"지출\")\r\n    .map((e) => parseInt(e.amount))\r\n    .reduce((acc, cur) => (acc += cur), 0));\r\n\r\n    \r\n\r\n  return (\r\n    <article className=\"balanceComponent\">\r\n      <section className=\"balanceSection\">\r\n        <p className=\"subTitle\">YOUR BALANCE</p>\r\n        <p id=\"money\">{total}원</p>\r\n      </section>\r\n      <div>\r\n        <section className=\"balanceSection income \">\r\n          <p className=\"subTitle\">INCOME</p>\r\n          <p className=\"money plus\">\r\n            +{income}원\r\n          </p>\r\n        </section>\r\n        <section className=\"balanceSection expense\">\r\n          <p className=\"subTitle\">EXPENSE</p>\r\n          <p className=\"money minus\">\r\n            -{expense}원\r\n          </p>\r\n        </section>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport TransactionFactory from 'components/TransactionFactory';\r\nimport History from 'components/History';\r\nimport Balance from 'components/Balance';\r\nimport {dbService, TRANSACTIONS} from 'fBase';\r\n\r\n\r\nfunction Home() {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const refNewBtn = useRef();\r\n\r\n    const showContainer = () => {\r\n        const historyContainer = document.getElementById('historyComponent');\r\n        historyContainer.classList.toggle('short');\r\n        const container = document.getElementById('newTransactionContainer');\r\n        container.classList.toggle('show');\r\n  \r\n        refNewBtn.current.innerText = \r\n          (container.classList.contains('show')) ? \r\n          'Cancel' :\r\n          'Add new transaction';\r\n      }\r\n\r\n    useEffect(() => {\r\n      dbService.collection(TRANSACTIONS).onSnapshot((snapshot) => {\r\n        const transactionArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTransactions(transactionArray);\r\n      });\r\n    }, [])\r\n\r\n\r\n    return (\r\n      <>\r\n        <Balance transactions={transactions} />\r\n        <History transactions={transactions} />\r\n        <section className=\"addNewButton\">\r\n          <button className=\"button\" onClick={showContainer} ref={refNewBtn}>\r\n            Add new transaction\r\n          </button>\r\n        </section>\r\n        <article id=\"newTransactionContainer\">\r\n          <TransactionFactory />\r\n        </article>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nfunction Nav() {\r\n  const Title = styled.span`\r\n    @import url(\"https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap\");\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    font-family: Montserrat, sans-serif;\r\n  `;\r\n\r\n  const location = useLocation();\r\n  let title = \"\";\r\n\r\n    if (location.pathname === \"/\") {\r\n      title = \"HOME\";\r\n    } else if (location.pathname === \"/settings\") {\r\n      title = \"Settings\";\r\n    }\r\n\r\n  return (\r\n    <nav>\r\n      <Link to=\"/settings\">\r\n      &#10094;\r\n      </Link>\r\n      <span id=\"navTitle\">{title}</span>\r\n      <Link to=\"/\">\r\n      &#10095;\t\r\n      </Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Settings from \"routes/Settings\";\r\nimport Home from \"routes/Home\";\r\nimport Nav from './Nav';\r\n\r\nfunction AppRouter({ categories }) {\r\n  return (\r\n    <Router>\r\n      <Nav />\r\n      <Switch>\r\n        <Route exact path=\"/settings\" >\r\n          <Settings categories={categories}/>\r\n        </Route>\r\n        <Route exact path=\"/\" >\r\n          <Home categories={categories}/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n      <footer>\r\n        &copy; {new Date().getFullYear()} Expense Tracker - SOHYEON OH 오소현\r\n      </footer>\r\n    );\r\n}\r\n\r\nexport default Footer\r\n","import { dbService, CATEGORIES } from 'fBase';\r\nimport React, {useEffect, useState} from 'react';\r\nimport AppRouter from \"routes/Router\";\r\nimport Footer from 'components/Footer';\r\n\r\nfunction App() {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(CATEGORIES).onSnapshot((snapshot) => {\r\n  \r\n      const categoryArray = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id\r\n      }));\r\n      setCategories(categoryArray);\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <main className=\"App\" >\r\n    <AppRouter categories={categories}/>\r\n    <Footer />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport \"./style/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}